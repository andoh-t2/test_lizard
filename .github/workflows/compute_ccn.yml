name: Lizard on PR Comment (Diff Only)

on:
  issue_comment:
    types: [created, edited]

jobs:
  lizard-on-command:
    if: github.event.issue.pull_request != null && startsWith(github.event.comment.body, '|> compute ccn')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout PR branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr checkout ${{ github.event.issue.number }}

      - name: Set up Python and Install Lizard
        run: pip install lizard

      - name: Get diff file list
        id: diff
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.issue.number }}
        run: |
          # PRのマージ先ブランチのコミットSHAを取得
          base_sha=$(gh pr view $PR_NUMBER --json baseRefOid -q .baseRefOid)
          
          # 現在チェックアウトしているブランチはPRのブランチなので、HEADが使える
          git diff --name-only "$base_sha"...HEAD | grep -E '\.(cpp|hpp)$' > diff_files.txt || true
          
          echo "--- diff_files.txt content ---"
          cat diff_files.txt
          echo "------------------------------"

      - name: Run Lizard on diff files
        run: |
          files=$(cat diff_files.txt | xargs)
          if [ -z "$files" ]; then
            echo "No C++ source/header files changed." > comment.txt
            exit 0
          fi
            
          # lizardコマンドを実行し、エラー出力(stderr)も変数に含める。
          # "|| true" でコマンドが失敗してもステップが停止しないようにする。
          if lizard_output=$(lizard --CCN 7 --length 150 --arguments 7 -T nloc=100 --input_file diff_files.txt); then
            exit_code=0
          else
            exit_code=$?
          fi
          exit_code=$? # Lizardの終了コードを取得

          # 終了コードに基づいてメッセージを分岐
          if [ $exit_code -eq 0 ]; then
            # 警告なしの場合
            echo '✅ **Cyclomatic Complexity Report (No warnings)**' > comment.txt
            echo "" >> comment.txt
            echo "No functions exceeded the complexity threshold." >> comment.txt
          else
            # 警告ありの場合
            echo '⚠️ **Cyclomatic Complexity Report (Warnings found)** 👮' > comment.txt
            echo "" >> comment.txt
            echo "One or more functions exceeded the complexity threshold." >> comment.txt
          fi

          # 共通のレポート内容を追記
          echo "" >> comment.txt
          echo '```' >> comment.txt
          echo "$lizard_output" | head -n 100 >> comment.txt
          echo '```' >> comment.txt

      - name: Post comment to PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.issue.number }} --body-file comment.txt
