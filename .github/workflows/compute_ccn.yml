name: Lizard on PR Comment (Diff Only)

on:
  pull_request:
    types: [opened, synchronize, labeled]

jobs:
  lizard-on-label:
    if: contains(github.event.pull_request.labels.*.name, 'compute-ccn')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python and Install Lizard
        run: pip install lizard
      
      - name: Filter for C++ files
        uses: dorny/paths-filter@v3
        id: changes
        with:
          # 変更されたファイルリストをスペース区切りで取得
          list-files: shell
          # 'cpp'という名前でフィルタを定義
          filters: |
            cpp:
              - '**/*.cpp'
              - '**/*.hpp'

      - name: Run Lizard on changed files
        if: steps.changes.outputs.cpp == 'true'
        id: lizard
        run: |
          pip install lizard

          echo "Running Lizard on: ${{ steps.changes.outputs.cpp_files }}"
          
          if lizard_output=$(lizard --CCN 7 --length 150 --arguments 7 -T nloc=100 ${{ steps.changes.outputs.cpp_files }}); then
            exit_code=0
          else
            exit_code=$?
          fi

          # 終了コードに基づいてメッセージを分岐
          if [ $exit_code -eq 0 ]; then
            {
              echo '✅ **Cyclomatic Complexity Report (No warnings)**'
              echo ""
              echo "No functions exceeded the complexity threshold."
            } > comment-body.txt
          else
            {
              echo '⚠️🧨 **Cyclomatic Complexity Report (Warnings found)** 👮🚨'
              echo ""
              echo "One or more functions exceeded the complexity threshold."
            } > comment-body.txt
          fi

      # C++ファイルに変更がなかった場合のコメントを作成
      - name: Prepare "No Changes" comment
        if: steps.changes.outputs.cpp == 'false'
        id: no_changes
        run: |
          echo "😴 **Cyclomatic Complexity Report**" > comment-body.txt
          echo "" >> comment-body.txt
          echo "No changed C++ files to analyze." >> comment-body.txt
          echo "comment_file=comment-body.txt" >> $GITHUB_OUTPUT

      - name: Post comment to PR
        # lizardかno_changesステップが成功した場合のみ実行
        if: success() && (steps.lizard.outputs.comment_file || steps.no_changes.outputs.comment_file)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT_FILE="${{ steps.lizard.outputs.comment_file || steps.no_changes.outputs.comment_file }}"
          gh pr comment ${{ github.event.number }} --body-file "$COMMENT_FILE"
